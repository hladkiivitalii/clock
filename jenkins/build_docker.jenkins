#!groovy
// Run docker build
properties([disableConcurrentBuilds()])

pipeline {
    agent {
        label 'master'
        }
    triggers { pollSCM('* * * * *')}
    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps()
    }
    stages {
        stage("docker login") {
            steps {
                echo "============ Docker login ============"
                    sh """
                    docker login -u $USERNAME -p $PASSWORD
                    """

            }
        }
        stage("create docker image") {
            steps {
                echo " ============== start building image =================="
                dir ('src') {
                	sh 'docker build -t clock:latest . '
                	sh 'docker tag clock:latest localhost:5000/clock:latest'
                }
            }
        }
        stage("Docker push") {
            steps {
                echo " ============== push docker image =================="
                sh 'docker push localhost:5000/clock:latest'
            }
        }
        stage("Pull Image") {
            steps {
                echo " ============== get docker image on server =================="
                sh '''
                ssh root@46.101.208.229 'docker pull 104.248.129.112:5000/clock:latest'
                '''
            }
        }
        stage("Run Image") {
            steps {
                echo " ============== run docker image on server =================="
                sh '''
                ssh root@46.101.208.229 'docker run -p 80:80 -d --name clock  --rm clock:latest '
                '''
            }
        }
    }
}